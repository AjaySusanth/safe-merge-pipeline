name: Secure PR merge with build check
permissions:
  contents: write
  pull-requests: write
on:
  pull_request: 
    branches: [main]
  issue_comment:
    types: [created]

jobs:
  check-override:
    runs-on: ubuntu-latest
    outputs:
      allow-merge: ${{ steps.check-override.outputs.allow-merge }}
    steps:
      - name: Check for override comment
        id: check-override
        run: |
          allow_merge=false
          authorized_users=("AjaySusanth")
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            if [[ "${{ github.event.comment.body }}" == "/override" ]]; then
              is_pr_comment="${{ github.event.issue.pull_request != null }}"
              commenter=${{ github.event.comment.user.login }}

              if [[ "$is_pr_comment" == "true" ]]; then
                for user in "${authorized_users[@]}"; do
                  if [[ "$commenter" == "$user" ]]; then
                    allow_merge=true
                    break
                  fi
                done
              fi
            fi
          fi
          echo "allow-merge=$allow_merge" >> $GITHUB_OUTPUT
        

  build-check:
    needs: check-override
    if: needs.check-override.outputs.allow-merge == 'false'
    runs-on: ubuntu-latest
    defaults:
            run:
                working-directory: demo-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm install
      - name: Run build
        run: npm run build
  approve-merge:
    needs: [check-override, build-check]
    runs-on: ubuntu-latest
    outputs:
          merge: ${{ steps.approve-merge.outputs.merge }}
    if: always()
    steps:
      - name: Check PR for merge
        id: approve-merge
        run: |
          echo "Allow merge: ${{ needs.check-override.outputs.allow-merge }}"
          echo "Build check: ${{ needs.build-check.result || 'skipped' }}"
          if [[ "${{ needs.check-override.outputs.allow-merge }}" == "true" ]] || [[ "${{ needs.build-check.result || 'skipped' }}" == "success" ]]; then
             echo "merge=true" >> $GITHUB_OUTPUT
            echo "PR approved for merge"
          else 
            echo "merge=false" >> $GITHUB_OUTPUT
            echo "PR not approved for merge"
            exit 1
          fi
  merge-pr:
    needs: approve-merge
    if: success() && needs.approve-merge.outputs.merge == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Fetch main branch
        run: |
          git fetch origin main

      - name: Switch to main branch
        run: |
          git checkout main

      - name: Merge the pull request
        run: |
          echo "Merging the pull request branch into main..."
          git merge ${{ github.event.pull_request.head.ref }}

      - name: Push changes to the main branch
        run: |
          git push origin main
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
